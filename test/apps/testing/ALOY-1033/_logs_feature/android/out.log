require('jquery'). Not found. Return ScopeLogger
require('/CFG'). Not found. Return ScopeLogger
> require('/home/s.volkov/Proj/alloy/test/apps/testing/ALOY-1033/alloy.js')
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "set",
  "args": [
    "backgroundColor",
    "#fff"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "Platform"
  ]
}
{
  "name": "Titanium.Platform",
  "trap": "get",
  "args": [
    "osname"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "Database"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "API"
  ]
}
{
  "name": "Titanium.API",
  "trap": "get",
  "args": [
    "info"
  ]
}
{
  "name": "Titanium.API.info",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.API}\")",
    "No config.adapter.idAttribute specified for table \"rows\""
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "API"
  ]
}
{
  "name": "Titanium.API",
  "trap": "get",
  "args": [
    "info"
  ]
}
{
  "name": "Titanium.API.info",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.API}\")",
    "Adding \"alloy_id\" to uniquely identify rows"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "Database"
  ]
}
{
  "name": "Titanium.Database",
  "trap": "get",
  "args": [
    "open"
  ]
}
{
  "name": "Titanium.Database.open",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.Database}\")",
    "_alloy_"
  ]
}
{
  "name": "[apply](Titanium.Database.open)",
  "trap": "get",
  "args": [
    "execute"
  ]
}
{
  "name": "[apply](Titanium.Database.open).execute",
  "trap": "apply",
  "args": [
    "(this: \"{[apply](Titanium.Database.open)}\")",
    "CREATE TABLE IF NOT EXISTS rows ( title TEXT,alloy_id TEXT UNIQUE)"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "createWindow"
  ]
}
{
  "name": "Titanium.UI.createWindow",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.UI}\")",
    {
      "backgroundColor": "white",
      "layout": "vertical",
      "id": "index"
    }
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "createSearchBar"
  ]
}
{
  "name": "Titanium.UI.createSearchBar",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.UI}\")",
    {
      "id": "searchList",
      "showCancel": true,
      "top": 20
    }
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "SIZE"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "SIZE"
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "createListSection"
  ]
}
{
  "name": "Titanium.UI.createListSection",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.UI}\")",
    {
      "id": "main"
    }
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "UI"
  ]
}
{
  "name": "Titanium.UI",
  "trap": "get",
  "args": [
    "createListView"
  ]
}
{
  "name": "Titanium.UI.createListView",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.UI}\")",
    {
      "sections": [
        "\"{[apply](Titanium.UI.createListSection)}\""
      ],
      "templates": {
        "template": {
          "properties": {
            "name": "template"
          },
          "childTemplates": [
            {
              "type": "Ti.UI.Label",
              "bindId": "title",
              "properties": {
                "width": "\"{Titanium.UI.SIZE}\"",
                "height": "\"{Titanium.UI.SIZE}\"",
                "color": "#000",
                "bindId": "title",
                "left": 5
              }
            }
          ]
        }
      },
      "searchView": "\"{[apply](Titanium.UI.createSearchBar)}\"",
      "id": "listView",
      "top": 0,
      "defaultItemTemplate": "template"
    }
  ]
}
{
  "name": "[apply](Titanium.UI.createWindow)",
  "trap": "get",
  "args": [
    "add"
  ]
}
{
  "name": "[apply](Titanium.UI.createWindow).add",
  "trap": "apply",
  "args": [
    "(this: \"{[apply](Titanium.UI.createWindow)}\")",
    "\"{[apply](Titanium.UI.createListView)}\""
  ]
}
{
  "name": "Titanium",
  "trap": "get",
  "args": [
    "App"
  ]
}
{
  "name": "Titanium.App",
  "trap": "get",
  "args": [
    "Properties"
  ]
}
{
  "name": "Titanium.App.Properties",
  "trap": "get",
  "args": [
    "hasProperty"
  ]
}
{
  "name": "Titanium.App.Properties.hasProperty",
  "trap": "apply",
  "args": [
    "(this: \"{Titanium.App.Properties}\")",
    "lvsearch"
  ]
}
{
  "name": "[apply](Titanium.Database.open)",
  "trap": "get",
  "args": [
    "execute"
  ]
}
{
  "name": "[apply](Titanium.Database.open).execute",
  "trap": "apply",
  "args": [
    "(this: \"{[apply](Titanium.Database.open)}\")",
    "SELECT * FROM rows"
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>",
  "trap": "get",
  "args": [
    "fieldCount"
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>",
  "trap": "get",
  "args": [
    "fieldCount"
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>.fieldCount",
  "trap": "apply",
  "args": [
    "(this: \"{[apply]([apply](Titanium.Database.open).execute)<#1>}\")"
  ]
}
{
  "name": "[apply]([apply]([apply](Titanium.Database.open).execute)<#1>.fieldCount)",
  "trap": "get",
  "args": [
    null
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>",
  "trap": "get",
  "args": [
    "isValidRow"
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>",
  "trap": "get",
  "args": [
    "close"
  ]
}
{
  "name": "[apply]([apply](Titanium.Database.open).execute)<#1>.close",
  "trap": "apply",
  "args": [
    "(this: \"{[apply]([apply](Titanium.Database.open).execute)<#1>}\")"
  ]
}
{
  "name": "[apply](Titanium.UI.createWindow)",
  "trap": "get",
  "args": [
    "open"
  ]
}
{
  "name": "[apply](Titanium.UI.createWindow).open",
  "trap": "apply",
  "args": [
    "(this: \"{[apply](Titanium.UI.createWindow)}\")"
  ]
}
